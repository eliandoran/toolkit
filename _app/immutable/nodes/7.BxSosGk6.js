import{s as $,n as l}from"../chunks/scheduler.CVlXoP1p.js";import{S as d,i as _,c as m,a as i,m as c,t as u,b as f,d as p}from"../chunks/index.B7p841iZ.js";import{S as g}from"../chunks/symmetric-input-output.Dh4ZKQgF.js";import{T}from"../chunks/tool.DmYppswC.js";import{h as s}from"../chunks/he.BBeSkhuU.js";function h(o){let e,n;return e=new g({props:{fromTitle:"Original text",toTitle:"Encoded text",to:o[0],from:o[1]}}),{c(){m(e.$$.fragment)},l(t){i(e.$$.fragment,t)},m(t,r){c(e,t,r),n=!0},p:l,i(t){n||(u(e.$$.fragment,t),n=!0)},o(t){f(e.$$.fragment,t),n=!1},d(t){p(e,t)}}}function S(o){let e,n;return e=new T({props:{title:"HTML Entity Encode/Decode",$$slots:{default:[h]},$$scope:{ctx:o}}}),{c(){m(e.$$.fragment)},l(t){i(e.$$.fragment,t)},m(t,r){c(e,t,r),n=!0},p(t,[r]){const a={};r&4&&(a.$$scope={dirty:r,ctx:t}),e.$set(a)},i(t){n||(u(e.$$.fragment,t),n=!0)},o(t){f(e.$$.fragment,t),n=!1},d(t){p(e,t)}}}function x(o){function e(t){return s.encode(t,{useNamedReferences:!0})}function n(t){return s.decode(t)}return[e,n]}class v extends d{constructor(e){super(),_(this,e,x,S,$,{})}}export{v as component};
