import{s as p,n as l}from"../chunks/scheduler.BjQ5bDLx.js";import{S as $,i as _,c as s,a as m,m as c,t as u,b as f,d as i}from"../chunks/index.BY-kQMPu.js";import{T as g}from"../chunks/tool.o3ZsllX_.js";import{S as d}from"../chunks/symmetric-input-output.B6Aff3NF.js";function S(n){let e,o;return e=new d({props:{fromTitle:"Encode to Base64",toTitle:"Decode from Base64",to:b,from:x}}),{c(){s(e.$$.fragment)},l(t){m(e.$$.fragment,t)},m(t,r){c(e,t,r),o=!0},p:l,i(t){o||(u(e.$$.fragment,t),o=!0)},o(t){f(e.$$.fragment,t),o=!1},d(t){i(e,t)}}}function T(n){let e,o;return e=new g({props:{$$slots:{default:[S]},$$scope:{ctx:n}}}),{c(){s(e.$$.fragment)},l(t){m(e.$$.fragment,t)},m(t,r){c(e,t,r),o=!0},p(t,[r]){const a={};r&1&&(a.$$scope={dirty:r,ctx:t}),e.$set(a)},i(t){o||(u(e.$$.fragment,t),o=!0)},o(t){f(e.$$.fragment,t),o=!1},d(t){i(e,t)}}}function b(n){return btoa(n)}function x(n){return atob(n)}class q extends ${constructor(e){super(),_(this,e,null,T,p,{})}}export{q as component};
